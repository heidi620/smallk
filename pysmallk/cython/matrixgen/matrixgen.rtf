{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww13680\viewh10760\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Preprocessor for Term-FrequencyMatrices\
Last update: Dec. 20, 2013\
\
OVERVIEW\
\
The preprocessor prunes rows and columns from term-frequency matrices, attempting to generate\
a result matrix that is more suitable for clustering.  The MatrixMarket file format is used for the input\
and output matrices.  The preprocessor can read any MatrixMarket file supported by the hierarchical \
clustering code.\
\
Rows (terms) are pruned if a given term appears in fewer than 'DOCS_PER_TERM' documents.  The \
value of DOCS_PER_TERM is a command-line parameter with a default value of 3.  For a term-frequency\
input matrix, in which the matrix elements represent occurrence counts for the terms, this parameter actually \
specifies the minimum row sum for each term.  Any rows whose rowsums are less than this value\
will be pruned.\
\
Columns (docs) are pruned if a given document contains fewer than 'TERMS_PER_DOC' terms.  The value of\
TERMS_PER_DOC is a command-line parameter with a default value of 5.\
\
Whenever columns (documents) are pruned the preprocessor checks the remaining columns \
for uniqueness.  Any duplicate columns are identified and a representative column is chosen as \
the survivor.  The code always selects the column with the largest column index in such groups as \
the survivor.  The Matlab 'unique' function seems to select the surviving column by a different criteria,\
based on the results of an undocumented unstable sort routine.  Sometimes the C++ and Matlab\
preprocessors generate identical results, such as for the wikipedia_800K data set.  In general, \
the different selection criteria for the surviving column produces matrices whose columns differ \
by a permutation.\
\
The code continues pruning rows and columns until it finds no further candidates for pruning. It \
then computes new scores for the resulting entries and writes out the result.\
\
If the preprocessor should prune all rows or columns, it writes an error message to the screen and\
terminates without generating any output.\
\
HOW TO BUILD AND RUN THE CODE\
\
The preprocessor code and build folders can all be found under the preprocessor folder.  To build the code, \
cd to either the preprocessor/build/Linux or preprocessor/build/MacOSX folder and run the following commands:\
\
	make clean\
	make CFG=release\
\
If this command fails, edit the makefile and set the CXX variable so that it points to g++-4.8 on\
your system.  Be sure to include the --std=c++11 flag, as the given makefile does.\
\
The binary is called 'preprocess_tf' and is written to bin.release/preprocess_tf.\
\
If the binary is run with no arguments it will list the command-line arguments that it supports:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1\fs22 \cf0 \CocoaLigature0 ./bin.release/preprocess_tf\
         --indir <path> \
        [--outdir (defaults to current directory)] \
        [--docs_per_term 3] \
        [--terms_per_doc 5] \
        [--maxiter INT_MAX] \
        [--boolean_mode 0] \
\

\f0\fs24 The only required param is the --indir parameter, which specifies the input folder.  This input folder\
is assumed to contain these files: \
\
	dictionary.txt\
	documents.txt\
	matrix.mtx\
\
The --outdir parameter specifies the location for the output files.  If unspecified, the output files are\
written to the current directory.  Three output files are generated:\
\
	reduced_dictionary.txt\
	reduced_documents.txt\
	reduced_matrix.mtx\
\
The --docs_per_term parameter is used to control row (term) pruning.  If the sum of all elements in \
any row is less than this number, the row will be pruned.  The default value is 3.\
\
The --terms_per_docs parameter is used to control column (document) pruning.  Any documents\
containing fewer than this number of terms will be pruned.  The default value is 5.\
\
The --maxiter parameter sets an upper bound on the number of iterations.  The default value is the \
maximum integer value.  Usually the iterations are well-behaved and convergence is reached after\
only a few iterations, so you are unlikely to ever need to set this parameter.\
\
The --boolean_mode parameter is used to force the preprocessor to ignore the frequency counts in the\
term-frequency input matrix, and instead treat the matrix as if it consisted only of ones and zeros.\
In other words, the preprocessor will store a '1' in its initial matrix at the locations of all nonzeros,\
regardless of what the actual term count is.  This switch can be used to study the effect of non-boolean\
term counts on the clustering results.\
\
NOTE: it is essential to enable boolean mode when processing matrices that do not contain actual term counts.\
Most of the sample files checked in to the repo (such as those in the wikipedia_800K data set) contain SCORES,\
not counts.  These files can still be processed, but the nonzero values will be converted to '1' and treated as\
if the input matrix were boolean.\
\
SAMPLE RUNS\
\
To process the wikipedia_800K matrix, execute the following command, using appropriate paths\
for your system:\
\

\f1\fs22 ./bin.release/preprocess_tf --boolean_mode 1 --indir /path/to/wikipedia_800K/\
\

\f0\fs24 The code assumes that the given 'indir' contains the dictionary.txt, documents.txt, and matrix.mtx \
files for the wikipedia_800K document set.  Note also that boolean mode has been enabled, since\
this matrix contains tf-idf SCORES, not tf COUNTS.  This command generates the following output on a\
MacBook Pro laptop, under a normal user load: (paths have been altered)\
\

\f1\fs22       Command line options: \
\
	             indir: /path/to/wikipedia_800K/\
	            outdir: current directory\
	     docs_per_term: 3\
	     terms_per_doc: 5\
	          max_iter: 2147483647\
	      boolean_mode: 1\
\
Loading input matrix /path/to/wikipedia_800K/matrix.mtx\
	Input file load time: 103.252s.\
\
Starting iterations...\
	[1] height: 390248, width: 736500, nonzeros: 55832339\
	[2] height: 387105, width: 736056, nonzeros: 55822009\
	[3] height: 387086, width: 736048, nonzeros: 55821923\
Iterations finished.\
	New height: 387086\
	New width: 736048\
	New nonzero count: 55821923\
Processing time: 11.091s.\
\
Writing output matrix reduced_matrix.mtx\
Output file write time: 234.966s.\
Writing dictionary file reduced_dictionary.txt\
Writing documents file reduced_documents.txt\
Dictionary + documents write time: 2.186s.
\f0\fs24 \

\f1\fs22 \
\

\f0\fs24 This output says that the code required:\
	103.252 seconds to read and load the input matrix\
	11.091 seconds to perform the pruning operations and compute new scores\
	234.966 seconds to write the 'reduced_matrix.mtx' file to the current directory\
	2.186 seconds to write the 'reduced_dictionary.txt' and 'reduced_documents.txt' files to\
	          the current directory\
\
\
TESTS\
\
The code distribution contains a test suite that compares the results of the C++ and Matlab versions\
of the preprocessor.  To run the tests, you will need to edit the 'test_preprocessor_tf.cpp' file and set several\
paths appropriate to your system.\
\
To do so, open this file in a text editor and look at the top of the file.  You will see a vector of strings\
that contains the locations of several directories.  These directories contain the files uploaded to the \
gatech_share project for the NMF_20news_input_tf, NMF_20news_input, NMF_wikipedia_big_input, \
and wikipedia_800K datasets, as well as 'reduced' versions, containing the results of the Matlab preprocessor.\
\
Unzip the indicated datasets from the gatech_share project underneath a common folder.  Set the \
paths to each of the data sets in the strings.\
\
Then open the file 'main_preprocessor.cpp' and uncomment the following lines:\
\
	line 15 (the #include statement for "test_preprocessor.hpp")\
	lines 33-34 (runs the tests and then returns, bypassing the preprocessor code)\
\
Then build the code as specified above.  Run the tests by using the following command:\
\
	./bin.release/preprocess_tf\
\
The normal command line processing will be bypassed and the test suite will run.  Sample output\
on a MacBook Pro system appears below (paths have been altered):\
\

\f1\fs22 Running preprocessor tests...\
\
Loading unprocessed matrix in folder: /path/to/NMF_20news_input_tf/\
\
Starting iterations...\
	[1] height: 39771, width: 11237, nonzeros: 877453\
Iterations finished.\
	New height: 39727\
	New width: 11237\
	New nonzero count: 877374\
Loading Matlab result matrix from folder: /path/to/NMF_20news_input_tf_reduced/\
\
	term-frequency matrices at indices 0 and 1 do not have an identical pattern of nonzeros\
	but they ARE column permutations of each other\
	RMS error between column norms: 2.46068e-17\
\
Loading unprocessed matrix in folder: /path/to/NMF_20news_input/\
\
Starting iterations...\
	[1] height: 34120, width: 11235, nonzeros: 899998\
Iterations finished.\
	New height: 34067\
	New width: 11235\
	New nonzero count: 899892\
Loading Matlab result matrix from folder: /path/to/NMF_20news_input_reduced/\
\
	term-frequency matrices at indices 2 and 3 do not have an identical pattern of nonzeros\
	but they ARE column permutations of each other\
	RMS error between column norms: 2.28041e-17\
\
Loading unprocessed matrix in folder: /path/to/NMF_wikipedia_big_input/\
\
Starting iterations...\
	[1] height: 162793, width: 85768, nonzeros: 16253408\
	[2] height: 162407, width: 85762, nonzeros: 16252601\
Iterations finished.\
	New height: 162407\
	New width: 85762\
	New nonzero count: 16252601\
Loading Matlab result matrix from folder: /path/to/NMF_wikipedia_big_input_reduced/\
\
	term-frequency matrices at indices 4 and 5 do not have an identical pattern of nonzeros\
	but they ARE column permutations of each other\
	RMS error between column norms: 1.83505e-17\
\
Loading unprocessed matrix in folder: /path/to/wikipedia_800K/\
\
Starting iterations...\
	[1] height: 390248, width: 736500, nonzeros: 55832339\
	[2] height: 387105, width: 736056, nonzeros: 55822009\
	[3] height: 387086, width: 736048, nonzeros: 55821923\
Iterations finished.\
	New height: 387086\
	New width: 736048\
	New nonzero count: 55821923\
Loading Matlab result matrix from folder: /path/to/wikipedia_800K_reduced/\
\
	term-frequency matrices at indices 6 and 7 have an identical pattern of nonzeros \
	Frobenius norm of difference matrix: 1.29809e-13
\f0\fs24 \

\f1\fs22 \
\

\f0\fs24 For each data set, the test code compares the nonzero locations in the C++ generated matrix with those of the\
Matlab-generated matrix.  If they match, it computes the Frobenius norm of the difference matrix.  If the nonzero\
locations do not match, the code determines whether the matrices differ by a column permutation.  If so, the\
Frobenius norm of each column is computed and the RMS error of the difference between the column norms is\
displayed.  Both the Frobenius norm for equal matrices and the RMS error for equal-but-permuted matrices should\
be tiny.\
\
From this output we learn the following:\
\
	For data sets NMF_20news_input_tf, NMF_20news_input, and NMF_wikipedia_big_input, the C++ preprocessor\
	generates a matrix that is identical to the Matlab result except for a column permutation.\
\
	For the wikipedia_800K data set, the C++ preprocessor generates a matrix that is identical to the Matlab result.\
\
When finished running the tests, restore the comments to the main_preprocessor.cpp file and \
rebuild the code.  This can be done easily by the command 'git reset --hard'.\
\
CONTACT INFO\
\
Please contact Richard Boyd if you have any problems with this code:\
\
	Richard Boyd\
	Senior Research Scientist, GTRI\
	richard.boyd@gtri.gatech.edu\
	404-407-8695\
\

\f1\fs22 \
}